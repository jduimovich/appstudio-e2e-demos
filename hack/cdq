
REPO=$1
if [ -z "$REPO" ]
then
      echo Missing REPO  
      exit -1 
fi
VERBOSE=$2
 
#echo "CDQ: $REPO" 

CDQ_NAME=test-cdq
CDQ_TMP=$(mktemp)  
cat << EOF >$CDQ_TMP
apiVersion: appstudio.redhat.com/v1alpha1
kind: ComponentDetectionQuery
metadata:  
  name: $CDQ_NAME 
spec:
  git:
    context: ""
    revision: ""
    url: $REPO
  secret: ""
EOF

kubectl delete ComponentDetectionQuery $CDQ_NAME 2>&1  > /dev/null 
kubectl apply -f $CDQ_TMP  2>&1  > /dev/null 
 
#echo -n "Waiting for CDQ $CDQ_NAME to be ready."
MAX_WAIT=30
WAIT_COUNTER=1
while :
do
    YAML=$(kubectl get ComponentDetectionQuery $CDQ_NAME -o yaml)
    LEN=$(echo "$YAML" | yq '.status.conditions' | yq length) 
    if [ $LEN != 0 ]
    then 
      let LEN-- 
      if [ "$VERBOSE" = "true" ]
      then
            echo "$YAML" 
      fi
      STATUS=$(echo "$YAML" | yq ".status.conditions[$LEN].type")  
      if [ "$STATUS" == "Completed" ]
      then
          echo 
          DF=$( echo "$YAML" |  grep devfileFound | xargs)
          DFU=$( echo "$YAML" |  grep devfileUrl | xargs)
          DOCKER=$( echo "$YAML" |  grep dockerfileUrl | xargs) 
          if [ "$DF$DFU" != "" ]; then  
            let SUCCESS++
            printf "CDQ: %s\n\t%s\n\t%s\n\t%s\n" $REPO "$DF" "$DFU"  
            break
          else
              if [ "$DOCKER" != "" ]; then   
                printf "CDQ: %s\n\t%s\n" $REPO "$DOCKER"
              else 
                printf "CDQ: %s: No devfile or dockerfile found\n" "$REPO" 
              fi 
          fi   
          break
      fi 
    fi 
    let WAIT_COUNTER++
    if [ "$WAIT_COUNTER" == "$MAX_WAIT" ]
    then
        echo "WAIT LOOP TIMEOUT - continuing ... "
        break
    fi 
    sleep 1
done 

  
 